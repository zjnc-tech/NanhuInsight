/*
   SPDX-License-Identifier: Apache-2.0
   Copyright Authors of NanhuInsight
*/

// Code generated by lister-gen-v0.31. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/zjnc-tech/NanhuInsight/apis/k8s/demo/v1alpha1"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/listers"
	"k8s.io/client-go/tools/cache"
)

// DemoLister helps list Demos.
// All objects returned here must be treated as read-only.
type DemoLister interface {
	// List lists all Demos in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Demo, err error)
	// Demos returns an object that can list and get Demos.
	Demos(namespace string) DemoNamespaceLister
	DemoListerExpansion
}

// demoLister implements the DemoLister interface.
type demoLister struct {
	listers.ResourceIndexer[*v1alpha1.Demo]
}

// NewDemoLister returns a new DemoLister.
func NewDemoLister(indexer cache.Indexer) DemoLister {
	return &demoLister{listers.New[*v1alpha1.Demo](indexer, v1alpha1.Resource("demo"))}
}

// Demos returns an object that can list and get Demos.
func (s *demoLister) Demos(namespace string) DemoNamespaceLister {
	return demoNamespaceLister{listers.NewNamespaced[*v1alpha1.Demo](s.ResourceIndexer, namespace)}
}

// DemoNamespaceLister helps list and get Demos.
// All objects returned here must be treated as read-only.
type DemoNamespaceLister interface {
	// List lists all Demos in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Demo, err error)
	// Get retrieves the Demo from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.Demo, error)
	DemoNamespaceListerExpansion
}

// demoNamespaceLister implements the DemoNamespaceLister
// interface.
type demoNamespaceLister struct {
	listers.ResourceIndexer[*v1alpha1.Demo]
}
