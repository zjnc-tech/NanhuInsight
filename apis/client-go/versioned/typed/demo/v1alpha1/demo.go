/*
   SPDX-License-Identifier: Apache-2.0
   Copyright Authors of NanhuInsight
*/

// Code generated by client-gen-v0.31. DO NOT EDIT.

package v1alpha1

import (
	"context"

	scheme "github.com/zjnc-tech/NanhuInsight/apis/client-go/versioned/scheme"
	v1alpha1 "github.com/zjnc-tech/NanhuInsight/apis/k8s/demo/v1alpha1"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// DemosGetter has a method to return a DemoInterface.
// A group's client should implement this interface.
type DemosGetter interface {
	Demos(namespace string) DemoInterface
}

// DemoInterface has methods to work with Demo resources.
type DemoInterface interface {
	Create(ctx context.Context, demo *v1alpha1.Demo, opts v1.CreateOptions) (*v1alpha1.Demo, error)
	Update(ctx context.Context, demo *v1alpha1.Demo, opts v1.UpdateOptions) (*v1alpha1.Demo, error)
	Delete(ctx context.Context, name string, opts v1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error
	Get(ctx context.Context, name string, opts v1.GetOptions) (*v1alpha1.Demo, error)
	List(ctx context.Context, opts v1.ListOptions) (*v1alpha1.DemoList, error)
	Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts v1.PatchOptions, subresources ...string) (result *v1alpha1.Demo, err error)
	DemoExpansion
}

// demos implements DemoInterface
type demos struct {
	*gentype.ClientWithList[*v1alpha1.Demo, *v1alpha1.DemoList]
}

// newDemos returns a Demos
func newDemos(c *DemoV1alpha1Client, namespace string) *demos {
	return &demos{
		gentype.NewClientWithList[*v1alpha1.Demo, *v1alpha1.DemoList](
			"demos",
			c.RESTClient(),
			scheme.ParameterCodec,
			namespace,
			func() *v1alpha1.Demo { return &v1alpha1.Demo{} },
			func() *v1alpha1.DemoList { return &v1alpha1.DemoList{} }),
	}
}
